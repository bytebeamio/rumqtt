on:
  pull_request:
    branches:
      - main
    paths:
      - '**.rs'
      - 'Cargo.*'
      - '*/Cargo.*'

name: Build and Test

jobs:
  test:
    name: Build and test on ${{ matrix.os }} with ${{ matrix.features }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        features:
          - --no-default-features
          - --features url
          - --features use-rustls
          - --features websocket
          - --no-default-features --features url
          - --no-default-features --features use-rustls
          - --no-default-features --features websocket
          - --all-features
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: clippy
          override: true
          profile: minimal
          toolchain: stable

      - name: Fetch dependencies
        uses: actions-rs/cargo@v1
        with:
          command: fetch
          args: --verbose

      # - name: Check benchmarks
      #   uses: actions-rs/cargo@v1
      #   env:
      #     RUSTFLAGS: "-D warnings"
      #   # NOTE: benchmarks are limited to compiling only on non windows systems, without any features enabled.
      #   if: ${{ matrix.os != 'windows-latest' && matrix.features == '--no-default-features' }}
      #   with:
      #     command: clippy
      #     args: --verbose --all-targets -p benchmarks

      - name: Check rumqttc and rumqttd
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: "-D warnings"
        with:
          command: clippy
          args: --verbose --all-targets ${{ matrix.features }} -p rumqttc -p rumqttd

      - name: Check docs
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --verbose --no-deps ${{ matrix.features }}

        # NOTE: Tests for rumqttc and rumqttd on all platforms
      - name: Test rumqttc and rumqttd
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release ${{ matrix.features }} -p rumqttc -p rumqttd
